[
    {
        "obfuscation": "with \ufeffWhen acts of databases and often process move more easily to large portions data into a lump, for example , in a proc\u00e8s-verbal a customers file. customers",
        "obfuscation-id": 1,
        "original": "\ufeffWhen working with data from files and databases it is often convenient to process big portions of data in one lump, for instance an entire customer record in a customer file.",
        "original-end-charpos": 175,
        "original-start-charpos": 0
    },
    {
        "obfuscation": "A appropriate instrument for the structure concept.",
        "obfuscation-id": 2,
        "original": "A good tool for this is the structure concept.",
        "original-end-charpos": 221,
        "original-start-charpos": 176
    },
    {
        "obfuscation": "A structure data that , in some ways relation. mediator",
        "obfuscation-id": 3,
        "original": "A structure is a set of data that in some way has an intermediary relation.",
        "original-end-charpos": 296,
        "original-start-charpos": 222
    },
    {
        "obfuscation": "we in connection with structures and my required arithmetics be learned that we in the previous question chapter.",
        "obfuscation-id": 4,
        "original": "In connection with structures we will be using pointers and pointer arithmetics that we learnt in the previous chapter.",
        "original-end-charpos": 415,
        "original-start-charpos": 297
    },
    {
        "obfuscation": "a pre-state Structures domestic classes programming. goal",
        "obfuscation-id": 5,
        "original": "Structures are a pre-state to classes within object oriented programming.",
        "original-end-charpos": 488,
        "original-start-charpos": 416
    },
    {
        "obfuscation": "it is a bridge Therefore, the next stage of your tabling education, programming. centered against",
        "obfuscation-id": 6,
        "original": "Therefore, this chapter is a bridge to the next step of your programmer education, object oriented programming.",
        "original-end-charpos": 599,
        "original-start-charpos": 489
    },
    {
        "obfuscation": "in this chapter , in order to learn the structures, information structures, with arrays deeds and structures in the context of structures.",
        "obfuscation-id": 7,
        "original": "In this chapter we will learn how to define structures, handle information stored in structures, work with arrays of structures and files in connection with structures.",
        "original-end-charpos": 767,
        "original-start-charpos": 600
    },
    {
        "obfuscation": "we learn to seize , as my structures, to structures and has a function of structures of the memory. dynamic",
        "obfuscation-id": 8,
        "original": "We will also learn how to use pointers to structures, how to sent structures to a function and store structures in the dynamic memory.",
        "original-end-charpos": 901,
        "original-start-charpos": 768
    },
    {
        "obfuscation": "the current offer Think , in a proc\u00e8s-verbal contains is risk name, address, telephone, email, of cheap profile, delivery, Bezahlen forth. .",
        "obfuscation-id": 9,
        "original": "Think of a customer record in a customer file that contains name, address, telephone, email, discount profile, terms of delivery, terms of payment and so forth.",
        "original-end-charpos": 1061,
        "original-start-charpos": 902
    },
    {
        "obfuscation": "the information All there for every customers in the current file.",
        "obfuscation-id": 10,
        "original": "All this information is stored for each customer in the customer file.",
        "original-end-charpos": 1131,
        "original-start-charpos": 1062
    },
    {
        "obfuscation": "and the transformation reading, represented ? that information a Hergang or move more easily of data , it is , all data on a uniform way. personnel .",
        "obfuscation-id": 11,
        "original": "When reading, processing and saving this information to a file or database it is convenient to be able to handle all data for a customer in a uniform way.",
        "original-end-charpos": 1285,
        "original-start-charpos": 1132
    },
    {
        "obfuscation": "this is the structure, found in a better organization code. programs",
        "obfuscation-id": 12,
        "original": "It is then gathered into a structure, which provides better organization of the program code.",
        "original-end-charpos": 1378,
        "original-start-charpos": 1286
    },
    {
        "obfuscation": "as a template A framework for all information by customer.",
        "obfuscation-id": 13,
        "original": "A structure is like a template for all information per customer.",
        "original-end-charpos": 1442,
        "original-start-charpos": 1379
    },
    {
        "obfuscation": "the code A structure behaves as a kind data int, double or char.",
        "obfuscation-id": 14,
        "original": "A structure behaves in the code like a data type such as int, double or char.",
        "original-end-charpos": 1519,
        "original-start-charpos": 1443
    },
    {
        "obfuscation": "a fact structure variables type defined.",
        "obfuscation-id": 15,
        "original": "You declare a variable of the structure type defined.",
        "original-end-charpos": 1572,
        "original-start-charpos": 1520
    },
    {
        "obfuscation": "the structure variables then you can all information customer. for a value",
        "obfuscation-id": 16,
        "original": "In the structure variable you can then store all information for a particular customer.",
        "original-end-charpos": 1659,
        "original-start-charpos": 1573
    },
    {
        "obfuscation": "I can also made a number of items, structure fully diversity is a structure with all information by customer.",
        "obfuscation-id": 17,
        "original": "You can also create an array of structure items, where each item of the array is a structure with all information per customer.",
        "original-end-charpos": 1786,
        "original-start-charpos": 1660
    },
    {
        "obfuscation": "diversity will thus to all information customers.",
        "obfuscation-id": 18,
        "original": "The array will thus contain all information for all customers.",
        "original-end-charpos": 1848,
        "original-start-charpos": 1787
    },
    {
        "obfuscation": "the first , we will a structure template, thus",
        "obfuscation-id": 19,
        "original": "First we will learn to define a structure template, i.e.",
        "original-end-charpos": 1904,
        "original-start-charpos": 1849
    },
    {
        "obfuscation": "as the form of structure, members and the type of each member of the structure.",
        "obfuscation-id": 20,
        "original": "specify the shape of the structure, the structure members and the data type of each member of the structure.",
        "original-end-charpos": 2012,
        "original-start-charpos": 1905
    },
    {
        "obfuscation": "we want Suppose with a good Hergang with: \u2022 the Product name \u2022 the Product id \u2022 the Price \u2022 the Quantity balance sheets of this Supplier \u2022 the in each product , in these five members.",
        "obfuscation-id": 21,
        "original": "Suppose we want to work with a product file with:  \u2022 Product name  \u2022 Product id  \u2022 Price  \u2022 Quantity in stock  \u2022 Supplier  This means that each product in the file will contain these five members.",
        "original-end-charpos": 2214,
        "original-start-charpos": 2013
    },
    {
        "obfuscation": "Here code for the definition of structure: early keyword struct, and , second , the name of the structure or data type (Prod).",
        "obfuscation-id": 22,
        "original": "Here is the code for definition of the structure: First there is the keyword struct, and then the name of the structure or data type (Prod).",
        "original-end-charpos": 2355,
        "original-start-charpos": 2215
    },
    {
        "obfuscation": "Within curly brackets enumerate then you members of the structure, will be seen in each member state in the usual variables. declared path",
        "obfuscation-id": 23,
        "original": "Within curly brackets you then enumerate the members of the structure, where each member is declared in the usual way of declaring variables.",
        "original-end-charpos": 2496,
        "original-start-charpos": 2356
    },
    {
        "obfuscation": "member Each is a semicolon.",
        "obfuscation-id": 24,
        "original": "Each member is ended with a semicolon.",
        "original-end-charpos": 2534,
        "original-start-charpos": 2497
    },
    {
        "obfuscation": "the last right After curly side also a semicolon.",
        "obfuscation-id": 25,
        "original": "After the last right curly bracket there must also be a semicolon.",
        "original-end-charpos": 2600,
        "original-start-charpos": 2535
    },
    {
        "obfuscation": "in particular the structure shows that the other members of different types of data could int, (char, double) and also arrays as cName.",
        "obfuscation-id": 26,
        "original": "The structure above shows that the different members can be of different data types (char, int, double) and also arrays like cName.",
        "original-end-charpos": 2731,
        "original-start-charpos": 2601
    },
    {
        "obfuscation": "other structure , as members of the fact structure, if applicable.",
        "obfuscation-id": 27,
        "original": "You can also have other structures as members of the structure, if applicable.",
        "original-end-charpos": 2809,
        "original-start-charpos": 2732
    },
    {
        "obfuscation": "the name of the structure and of selected, are , of course , but they should in no way their usage.",
        "obfuscation-id": 28,
        "original": "The names of the structure and members are of course arbitrarily selected, but they should in some way correspond to their usage.",
        "original-end-charpos": 2938,
        "original-start-charpos": 2810
    },
    {
        "obfuscation": "a structure of industrialized countries variable, thus",
        "obfuscation-id": 29,
        "original": "To declare a structure variable, i.e.",
        "original-end-charpos": 2975,
        "original-start-charpos": 2939
    },
    {
        "obfuscation": "a variables data type Prod, write: Here we you prodOne urgently a variables type. Prod",
        "obfuscation-id": 30,
        "original": "a variable of the data type Prod, you write: Here we declare a variable prodOne which is of the Prod type.",
        "original-end-charpos": 3082,
        "original-start-charpos": 2976
    },
    {
        "obfuscation": "this is already with values can Within declaration: curly brackets we enumerate values for MPs in the right sequence, commas. on",
        "obfuscation-id": 31,
        "original": "You can also initiate it with values already in the declaration: Within curly brackets we enumerate values for the structure members in the correct sequence, separated by commas.",
        "original-end-charpos": 3261,
        "original-start-charpos": 3083
    },
    {
        "obfuscation": "the data types of values , must be the definition of members.",
        "obfuscation-id": 32,
        "original": "The data types of the values must correspond to the definition of the members.",
        "original-end-charpos": 3339,
        "original-start-charpos": 3262
    },
    {
        "obfuscation": "it is represented updating, ? or other means transformation applying a structure member, following in the form of write coding: made in the name of the structure and the variable, followed by a member of question.",
        "obfuscation-id": 33,
        "original": "When updating, copying or in other ways processing the value of a structure member, you use the following way of coding: You write the name of the structure variable, followed by a period and the name of the member in question.",
        "original-end-charpos": 3567,
        "original-start-charpos": 3340
    },
    {
        "obfuscation": "the quantity Here in balance sheets be set for the \u2018Oliv Oil\u2019 product. 251",
        "obfuscation-id": 34,
        "original": "Here the quantity in stock will be set to 251 for the \u2018Oliv Oil\u2019 product.",
        "original-end-charpos": 3640,
        "original-start-charpos": 3568
    },
    {
        "obfuscation": "these Or: cString , that a number a little longer illusions , including the content of the cSupp member. with a benefit resumed",
        "obfuscation-id": 35,
        "original": "Or: This requires that cString is a string array whose content is copied to the cSupp member.",
        "original-end-charpos": 3734,
        "original-start-charpos": 3641
    },
    {
        "obfuscation": "we will now a whole programs with structures.",
        "obfuscation-id": 36,
        "original": "We will now create an entire program using structures.",
        "original-end-charpos": 3788,
        "original-start-charpos": 3735
    },
    {
        "obfuscation": "we will structure a product of create precedent , for example , and two structure information. characteristics with product",
        "obfuscation-id": 37,
        "original": "We will create a product structure according to the previous example and two structure variables with product information.",
        "original-end-charpos": 3910,
        "original-start-charpos": 3789
    },
    {
        "obfuscation": "it leads detect directly into the declaration of and others , with the user.",
        "obfuscation-id": 38,
        "original": "One of them should be initiated directly in the declaration and the other is supposed to be supplied with information from the user.",
        "original-end-charpos": 4042,
        "original-start-charpos": 3911
    },
    {
        "obfuscation": "programs must find a products. \u2019 s table",
        "obfuscation-id": 39,
        "original": "Finally the program should print a table of the products.",
        "original-end-charpos": 4099,
        "original-start-charpos": 4043
    },
    {
        "obfuscation": "we graph: SPA simple. is the logic",
        "obfuscation-id": 40,
        "original": "We start with a JSP graph: The logic is simple.",
        "original-end-charpos": 4147,
        "original-start-charpos": 4100
    },
    {
        "obfuscation": "the most difficult task , on the in the right way.",
        "obfuscation-id": 41,
        "original": "The most difficult task is to handle the structure in the correct way.",
        "original-end-charpos": 4217,
        "original-start-charpos": 4148
    },
    {
        "obfuscation": "the code: Here the definition of the structure main(), before the also to the programme, within functions.",
        "obfuscation-id": 42,
        "original": "Here is the code: The definition of the structure is before main(), which makes it valid for the entire program, also inside functions.",
        "original-end-charpos": 4353,
        "original-start-charpos": 4218
    },
    {
        "obfuscation": "it also within the structure of main(), in main() and not just in other functions.",
        "obfuscation-id": 43,
        "original": "You can also define the structure inside main(), but then it is only valid in main() and not in other functions.",
        "original-end-charpos": 4465,
        "original-start-charpos": 4354
    },
    {
        "obfuscation": "the first structure prodOne variables will be directly into the declaration. with values",
        "obfuscation-id": 44,
        "original": "The first structure variable prodOne is initiated with values directly in the declaration.",
        "original-end-charpos": 4555,
        "original-start-charpos": 4466
    },
    {
        "obfuscation": "there is a number of the rubric texts and the reception the values of the structure of the second structure variable.",
        "obfuscation-id": 45,
        "original": "Then there are a number of heading texts and entry of values to the structure members of the second structure variable.",
        "original-end-charpos": 4674,
        "original-start-charpos": 4556
    },
    {
        "obfuscation": "ratings that we a period between the structure and member. variables",
        "obfuscation-id": 46,
        "original": "Note that we use a period between the structure variable and member.",
        "original-end-charpos": 4742,
        "original-start-charpos": 4675
    },
    {
        "obfuscation": "the results obtained at tabs .",
        "obfuscation-id": 47,
        "original": "The output is done by means of tabs \\t.",
        "original-end-charpos": 4781,
        "original-start-charpos": 4743
    },
    {
        "obfuscation": "fact need , it is the length of texts information is in the right column.",
        "obfuscation-id": 48,
        "original": "You might need to accommodate the length of the entered texts to make the information be printed in the correct column.",
        "original-end-charpos": 4900,
        "original-start-charpos": 4782
    },
    {
        "obfuscation": "we would have that more flexibility by the text of the chapter 1, formatting functions , but we simplicity\u2019s sake. grober way to",
        "obfuscation-id": 49,
        "original": "We could have done that more flexible by means of the text formatting functions from chapter 1, but we used a rough method for simplicity\u2019s sake.",
        "original-end-charpos": 5045,
        "original-start-charpos": 4901
    },
    {
        "obfuscation": "with the previous programs A expense is that we a distinct structure (prodOne, variables prodTwo) for every product.",
        "obfuscation-id": 50,
        "original": "A disadvantage with the previous program is that we needed a separate structure variable (prodOne, prodTwo) for each product.",
        "original-end-charpos": 5170,
        "original-start-charpos": 5046
    },
    {
        "obfuscation": "A prominenteren solution is that , with a number of structure features of the use of a structure loop uniforms way. characteristics",
        "obfuscation-id": 51,
        "original": "A more convenient solution is to use an array with structure variables allowing the use of a loop to process the structure variables in a uniform way.",
        "original-end-charpos": 5320,
        "original-start-charpos": 5171
    },
    {
        "obfuscation": "we Below a structure of the diversity of the sort sProds Prod with three items: We also to the span of three products, linked , but we have not yet in the structure members. values",
        "obfuscation-id": 52,
        "original": "Below we declare a structure array sProds of the type Prod with three items: We have allocated memory space for three products, but we have not yet assigned values to the structure members.",
        "original-end-charpos": 5510,
        "original-start-charpos": 5321
    },
    {
        "obfuscation": "one might That directly to the declaration: notes that the values for every structure of variables surrounded curly brackets, and that the values of the enumerated in any form hand in hand curly brackets.",
        "obfuscation-id": 53,
        "original": "That could be made directly at the declaration: Note that the values for each structure variable are surrounded by curly brackets, and that the values are enumerated in the usual way within each pair of curly brackets.",
        "original-end-charpos": 5729,
        "original-start-charpos": 5511
    },
    {
        "obfuscation": "the three brackets concurrently All surrounded by brackets additional curly delimiting together the list of values. oserais-je",
        "obfuscation-id": 54,
        "original": "All three pair of brackets are surrounded by an extra pair of curly brackets delimiting the initiation list of values.",
        "original-end-charpos": 5847,
        "original-start-charpos": 5730
    },
    {
        "obfuscation": "the last After hand , we need a semicolon.",
        "obfuscation-id": 55,
        "original": "After the last bracket there must be a semicolon.",
        "original-end-charpos": 5896,
        "original-start-charpos": 5848
    },
    {
        "obfuscation": "if their users want in values, covered in a loop:",
        "obfuscation-id": 56,
        "original": "If you want to let the user enter values, this is preferably done in a loop:",
        "original-end-charpos": 5972,
        "original-start-charpos": 5897
    }
]
